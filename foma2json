#!/usr/bin/env ruby
# coding: utf-8
require 'json'
require 'zlib'

def parse(file_name)
  obj = { :version => nil, :props => nil, :sigmas => [], :states => [] }

  mode = :none
  numnets = 0

  Zlib::GzipReader.open(file_name) do |gz|
    gz.each_line do |l|
      l.chomp!

      case l
      when /^##foma-net ([0-9]+\.[0-9]+)##/
        obj[:version] = $1
        numnets += 1
        raise "Only one network per file supported" if numnets > 1
      when /^##(props|sigma|states|end)##/
        mode = $1.to_sym
      else
        case mode
        when :props
          obj[:props] = l.split(' ').map { |x| x.to_i.to_s == x ? x.to_i : x }
        when :states
          obj[:states] << l.split(' ').map(&:to_i)
        when :sigma
          number, symbol = l.split ' '

          symbol.gsub! '@_EPSILON_SYMBOL_@', ''
          symbol.gsub! '@_IDENTITY_SYMBOL_@', '@ID@'
          symbol.gsub! '@_UNKNOWN_SYMBOL_@', '@UN@'
          obj[:sigmas][number.to_i] = symbol
        when :none
          raise "Format error"
        end
      end
    end
  end

  obj
end

if ARGV.length != 1
  puts "Usage: foma2js filename"
  exit 1
end

obj = parse(ARGV.first)
puts obj.to_json

exit 0
